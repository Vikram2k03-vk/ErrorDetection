name: Strict XML Validation

on:
  pull_request:
    paths:
      - '**/*.xml'
      - 'schemas/**/*.xsd'   # also trigger if schemas change

jobs:
  strict-validate-xml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build validator Docker image
        run: docker build -t xml-validator .github/docker/xml-validator

      - name: Find all XML files
        id: xml-files
        run: |
          echo "files=$(find . -type f -name '*.xml' | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Run strict validation inside Docker
        run: |
          docker run --rm -v "$PWD:/workspace" -w /workspace xml-validator bash -c '
            set -e
            ERROR=0

            for file in ${{ steps.xml-files.outputs.files }}; do
              echo "üîç Validating $file"

              # First check well-formedness
              if ! xmllint --noout "$file"; then
                echo "‚ùå Not well-formed XML: $file"
                ERROR=1
                continue
              fi

              # Try schema validation if an XSD exists for this XML
              # You may need to adjust logic to find correct schema file
              schema_path=""
              # Example: if your XML file name corresponds to schema file
              schema_candidate="schemas/$(basename "$file" .xml).xsd"
              if [ -f "$schema_candidate" ]; then
                schema_path="$schema_candidate"
              fi

              if [ -n "$schema_path" ]; then
                if ! xmllint --noout --schema "$schema_path" "$file"; then
                  echo "‚ùå Fails schema validation: $file (schema: $schema_path)"
                  ERROR=1
                  continue
                fi
              else
                echo "‚ö†Ô∏è No schema found for $file ‚Äî skipping schema check"
              fi

              # Additional rules: check for hardcoded names, missing tags etc.
              # You could use xmlstarlet or custom XPath rules here
              # Example: check if element <username> exists
              if ! xmlstarlet sel -t -v "//*[local-name()='username']" "$file" >/dev/null; then
                echo "‚ùå Missing <username> tag in $file"
                ERROR=1
              fi

            done

            if [ "$ERROR" -ne 0 ]; then
              echo "‚ùå Strict XML validation failed."
              exit 1
            else
              echo "‚úÖ All XML strictly validated!"
            fi
          '
